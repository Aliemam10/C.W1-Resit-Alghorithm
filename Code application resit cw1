#include <iostream>
#include <fstream>
#include <map>

// Function to save passwords to a file
void savePasswords(const std::map<std::string, std::string>& passwords) {
    std::ofstream outFile("passwords.txt");
    if (outFile.is_open()) {
        for (const auto& entry : passwords) {
            outFile << entry.first << ":" << entry.second << std::endl;
        }
        outFile.close();
    }
    else {
        std::cerr << "Unable to open passwords file for writing." << std::endl;
    }
}

// Function to load passwords from a file
std::map<std::string, std::string> loadPasswords() {
    std::map<std::string, std::string> passwords;
    std::ifstream inFile("passwords.txt");
    if (inFile.is_open()) {
        std::string line;
        while (std::getline(inFile, line)) {
            size_t pos = line.find(":");
            if (pos != std::string::npos) {
                std::string website = line.substr(0, pos);
                std::string password = line.substr(pos + 1);
                passwords[website] = password;
            }
        }
        inFile.close();
    }
    else {
        std::cerr << "Unable to open passwords file for reading." << std::endl;
    }
    return passwords;
}

int main() {
    std::string masterPassword;
    std::string confirmPassword;

    std::cout << "Create a master password: ";
    std::cin >> masterPassword;
    std::cout << "Confirm master password: ";
    std::cin >> confirmPassword;

    if (masterPassword != confirmPassword) {
        std::cout << "Passwords do not match. Please try again." << std::endl;
        return 1;
    }

    std::cout << "Master password set successfully." << std::endl;

    std::map<std::string, std::string> passwords = loadPasswords();

    while (true) {
        std::cout << "\nPassword Manager Menu:" << std::endl;
        std::cout << "1. Add Password" << std::endl;
        std::cout << "2. Retrieve Password" << std::endl;
        std::cout << "3. Exit" << std::endl;

        int choice;
        std::cout << "Enter your choice: ";
        std::cin >> choice;

        if (choice == 1) {
            std::string website, password;
            std::cout << "Enter website name: ";
            std::cin >> website;
            std::cout << "Enter password: ";
            std::cin >> password;
            passwords[website] = password;
            savePasswords(passwords);
            std::cout << "Password added successfully." << std::endl;
        }
        else if (choice == 2) {
            std::string website;
            std::cout << "Enter website name: ";
            std::cin >> website;
            if (passwords.find(website) != passwords.end()) {
                std::cout << "Password for " << website << " is: " << passwords[website] << std::endl;
            }
            else {
                std::cout << "Password not found for " << website << "." << std::endl;
            }
        }
        else if (choice == 3) {
            std::cout << "Exiting Password Manager. Goodbye!" << std::endl;
            break;
        }
        else {
            std::cout << "Invalid choice. Please enter a valid option." << std::endl;
        }
    }

    return 0;
}
